name: Test

on:
  - pull_request
  - push

jobs:
  Test:
    name: Test on Erlang/OTP ${{ matrix.otp_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        otp_version: [23, 24]
        os: [ubuntu-latest, windows-latest]

    env:
      LATEST_OTP_RELEASE: 24

    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@v1
        id: install-erlang
        with:
          otp-version: ${{matrix.otp_version}}
          rebar3-version: '3.16.1'

      - name: Restore Dialyzer PLT files from cache
        uses: actions/cache@v2
        if: ${{ matrix.otp_version == env.LATEST_OTP_RELEASE && matrix.os == 'ubuntu-latest' }}
        with:
          path: _build/*/rebar3_*_plt
          key: dialyzer-plt-cache-${{ steps.install-erlang.outputs.otp-version }}-${{ runner.os }}-${{ hashFiles('rebar.config*') }}-v1

      - name: Compile
        run: rebar3 compile

      - name: Formatting
        run: rebar3 fmt --check

      - name: Xref
        run: rebar3 xref

      - name: EUnit
        run: rebar3 eunit --verbose --cover

      - name: PropEr
        run: rebar3 proper --verbose --cover

      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.otp_version }}
        run: rebar3 as test coveralls send

      - name: Dialyzer
        if: ${{ matrix.otp_version == env.LATEST_OTP_RELEASE && matrix.os == 'ubuntu-latest' }}
        run: rebar3 clean && rebar3 as test dialyzer

  Finish:
    name: Finishing
    needs: [Test]
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls finished
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -v -k https://coveralls.io/webhook \
            --header "Content-Type: application/json" \
            --data "{\"repo_name\":\"$GITHUB_REPOSITORY\",\"repo_token\":\"$GITHUB_TOKEN\",\"payload\":{\"build_num\":$GITHUB_RUN_NUMBER,\"status\":\"done\"}}"
